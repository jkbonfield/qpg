Try constructing genomes from scratch.

Step 1:

Random seq
+ SNPs
+ STRs (homopolymers, dinuc, and longer)
+ CNVs
+ SINE and LINE repeats
+ Transversions and translocations

We can generate data which is suitable for fragmentation and then
assembly to GAF via miniasm.


Step 2 would be to identify these in an existing sequence and edit
according to those.  So variance in STRs, CNVs etc plus new SNPs etc.

Step 3.  Do this repeatedly with a population and mate members of the
population to simulate evolution.  We can then do pangenome
construction from that too.



-----------------------------------------------------------------------------

Test:

./shred.pl -length 1000 s1.fa > _s1.shred
minimap2 -xasm5 -t16 _s1.shred _s1.shred |gzip -1 > _s1.paf.gz
./miniasm -s100 -f _s1.shred _s1.paf.gz > _s1.miniasm.gfa

No output.  Why?
Lack of quality values maybe?

Tested on reads.fq pacbio set it works:

minimap2 -x ava-pb -t32 reads.fq reads.fq | gzip -1 > reads.paf.gz
miniasm -f reads.fq reads.paf.gz > reads.gaf

On fasta:

perl -e 'while (<>) {s/@/>/;print;$_=<>;print;<>;<>}' reads.fq > reads.fa
minimap2 -x ava-pb -t32 reads.fa reads.fa | gzip -1 > reads.fa.paf.gz
miniasm -f reads.fa reads.fa.paf.gz > reads.fa.gaf

Still works and identical output.
This is because reads.paf.gz and reads.fa.paf.gz are identical.
So minimap2 didn't care.

Average 8279bases long

At shred.pl -l 8279 -d 30 we get a graph of 47 nodes.

shred.pl -e 0    -d 30 -l 20000 -s 0 => 1 node
shred.pl -e 0    -d 30 -l 10000 -s 0 => 1 node
shred.pl -e 0    -d 30 -l  9000 -s 0 => 1 node
shred.pl -e 0    -d 30 -l  8000 -s 0 => 43 nodes

8k length and miniasm -h 500 reduces nodes to 8
-h 400 = 3 nodes
-h 300 = 1 node

    -h INT      max over hang length [1000]


shred -e 0 -d 30 -l 5000 -s 0 | ... -s 100 -h 100 => 16 nodes


~/work/quantum/shred.pl -e 0 -d 30 -length 1000 -s 0 _ > _.fa
minimap2 -k12 -w200  -xsr -F9999 -A1 -B9 -O20,40 -E3,1 --secondary=no -t32 _.fa _.fa |awk '$1 != $6 {m++} END {print m}' > _.paf
miniasm -m 20 -s 50 -o 100 -h 100 -f _.fa _.paf > _.gaf

Miniasm just doesn't work well!

minimap2 -xsr -X?
-X skips self-matches, to force all vs all mode.

minimap2 -xava-ont -r500  -X  -t32 _.fa _.fa > _X.paf
/software/team118/miniasm/miniasm -c 0 -1 -2 -i 0.1 -n0 -g 10 -e 0 -m 10 -s 10 -o 10 -h 10 -f _.fa _X.paf

Still only 1kb worth of consensus, out of 10kb.
Just can't stop it throwing away most alignments.

"4 sequences and 12 hits remain after containment removal"
Is this true?  If so it's minimap2 that's failing.


#  minimap2 -xava-ont -r500  -X  -t32 _.fa _.fa |awk 'BEGIN {OFS="\t"} {a=$0;sub("#[^#]*#[^#]*$","",$1);sub("#[^#]*#[^#]*$","",$6);if ($1 != $6) {print a}}' > _.paf
#  
#  [Strips out self-matches which still occur even with -X.  Why?]


--------------------------------------------------
./genome_create -l 10000 -s 0 2>&1 > _gen1k | cut -c 1-80
~/work/quantum/shred.pl -e 0 -d 30 -length 1000 -s 0 _gen1k > _.fa
minimap2 -xava-ont -r500  -X  -t32 _.fa _.fa  > _.paf
miniasm -m 20 -s 50 -o 100 -h 100 -f _.fa _.paf > _.gfa
egrep -c '^S' _.gfa


--------------------------------------------------

=rm graph*;rust-mdbg -l12 -k30  _.fa
egrep '^S' graph-*.gfa|wc -l

Lots of nodes, but it's one long list. A->B->C->D etc.  Ie one contig.

"gfatools asm -u" should be able to simplify this and collapse nodes?



--------------------------------------------------

abyss-pe name=abyss-out k=96 B=2G se=_.fa graph=gfa

22 nodes in abyss-out-3.gfa, but it's multiple contigs.  Longest
contig is 2923 bases (of 10000 bp ref).

The graph has no depth information, so it's useless for us as-is.


-----------------------------------------------------------------------------

Syncasm: https://github.com/c-zhou/oatk

-----------------------------------------------------------------------------

MBG https://github.com/maickrau/MBG

Use --kmer-c-tag FC:f and --edge-c-tag ec:i to get depth data.
